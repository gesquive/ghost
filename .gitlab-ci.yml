image: index.docker.io/gesquive/go-builder:latest

variables:
  GOPATH: ${CI_PROJECT_DIR}/vendor/go
  LOCAL_BIN: bin
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_REPO: gesquive
  IMAGE_NAME: ghost

cache: &global_cache
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - vendor/go/pkg/mod
    - bin
    - /var/lib/docker
    - image
  policy: pull

before_script:
  - make deps

stages:
  - deps
  - test
  - build
  - release

dependencies:
  stage: deps
  script:
    - make deps
  cache:
    <<: *global_cache
    policy: pull-push

unit_tests:
  stage: test
  script:
    - make test
  cache:
    <<: *global_cache

.race_detector:
  stage: test
  script:
    - make race
  cache:
    <<: *global_cache

code_coverage:
  stage: test
  coverage: '/coverage: \d+.\d+% of statements/'
  script:
    - make coverage
  cache:
    <<: *global_cache

build:
  stage: build
  script:
    - make
  cache:
    <<: *global_cache

pages:
  stage: release
  script:
    - make coverage-report
    - mv coverage/ public/
  cache:
    <<: *global_cache
  artifacts:
    paths:
      - public
  only:
    - master

release-dev:
  stage: release
  script:
    - make local-release
  cache:
    <<: *global_cache
  environment:
    name: development
  artifacts:
    paths:
      - dist/*_v*.tar.gz
      - dist/*_v*.zip

release-prod:
  stage: release
  script:
    - make release
  cache:
    <<: *global_cache
  environment:
    name: production
  artifacts:
    paths:
      - dist/*_v*.tar.gz
      - dist/*_v*.zip
  when: manual
  only:
    - tags

before_script:

build-docker:
  image: docker:stable
  services:
    - docker:dind
  stage: build
  script:
    - apk update && apk add --no-cache make git
    - make build-docker
    - mkdir image || true
    - docker save ${DOCKER_REPO}/${IMAGE_NAME} > image/${IMAGE_NAME}.tar
  cache:
    <<: *global_cache
    policy: pull-push

release-docker:
  image: docker:stable
  services:
    - docker:dind
  stage: release
  script:
    - apk update && apk add --no-cache make git
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker load -i image/${IMAGE_NAME}.tar
    - make release-docker
  cache:
    <<: *global_cache
  only:
    - master

release-docker-version:
  image: docker:stable
  services:
    - docker:dind
  stage: release
  script:
    - apk update && apk add --no-cache make git
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker load -i image/${IMAGE_NAME}.tar
    - make release-docker-version
  cache:
    <<: *global_cache
  only:
    - tags
