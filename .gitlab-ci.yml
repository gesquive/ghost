image: index.docker.io/gesquive/go-builder:latest

variables:
  GOPATH: ${CI_PROJECT_DIR}/vendor/go
  LOCAL_BIN: bin
  DOCKER_DRIVER: overlay2

cache: &global_cache
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - vendor/go/pkg/mod
    - bin
    - /var/lib/docker
    - dist
  policy: pull

before_script:
  - make deps

stages:
  - deps
  - test
  - build
  - release
  - build-docker
  - release-docker

dependencies:
  stage: deps
  script:
    - make deps
  cache:
    <<: *global_cache
    policy: pull-push

unit_tests:
  stage: test
  script:
    - make test
  cache:
    <<: *global_cache

.race_detector:
  stage: test
  script:
    - make race
  cache:
    <<: *global_cache

code_coverage:
  stage: test
  coverage: '/coverage: \d+.\d+% of statements/'
  script:
    - make coverage
  cache:
    <<: *global_cache

build:
  stage: build
  script:
    - make
  cache:
    <<: *global_cache

pages:
  stage: release
  script:
    - make coverage-report
    - mv coverage/ public/
  cache:
    <<: *global_cache
  artifacts:
    paths:
      - public
  only:
    - master

release:
  stage: release
  script:
    - make local-release
  cache:
    <<: *global_cache
    policy: pull-push
  environment:
    name: development
  artifacts:
    paths:
      - dist/*_v*.tar.gz
      - dist/*_v*.zip

release-version:
  stage: release
  script:
    - make release
  cache:
    <<: *global_cache
    policy: pull-push
  environment:
    name: production
  artifacts:
    paths:
      - dist/*_v*.tar.gz
      - dist/*_v*.zip
  when: manual
  only:
    - tags

.build-docker-arch:
  image: docker:stable
  services:
    - docker:dind
  stage: build-docker
  cache:
    <<: *global_cache
  before_script:
    - apk --update add --no-cache make git
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build-docker-amd64:
  extends: .build-docker-arch
  script:
    - make release-docker-amd64

build-docker-arm32v6:
  extends: .build-docker-arch
  tags: [linux, arm32v6]
  script:
    - make release-docker-arm32v6

build-docker-arm32v7:
  extends: .build-docker-arch
  tags: [linux, arm32v7]
  script:
    - make release-docker-arm32v7

build-docker-arm64v8:
  extends: .build-docker-arch
  tags: [linux, arm64v8]
  script:
    - make release-docker-arm64v8

release-docker:
  image: docker.io/gesquive/master-builder
  services:
    - docker:dind
  stage: release-docker
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker info
    - make release-docker
  only:
    - master

.build-docker:
  image: docker:stable
  services:
    - docker:dind
  stage: build
  before_script:
    - apk update && apk add --no-cache make git
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - apk update && apk add --no-cache make git
    - make build-docker
    - make save-docker-local
  cache:
    <<: *global_cache
    policy: pull-push

.release-docker-version:
  image: docker:stable
  services:
    - docker:dind
  stage: release
  before_script:
    - apk update && apk add --no-cache make git
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - make load-docker-local
    - make release-docker-version
  cache:
    <<: *global_cache
  only:
    - tags
